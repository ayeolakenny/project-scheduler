{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","state","console","log","firebase","links","uid","SignedOutLinks","notifications","map","notification","key","id","user","content","time","toDate","toString","project","title","authorFirstName","authorLastName","createdAt","projects","ProjectSummary","Dashboard","this","ProjectList","Notifications","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","React","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.36846fcc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = props =>{\r\n\r\n\treturn (\r\n\t  <ul className=\"right\">\r\n\t    <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n\t    <li><a onClick={ props.signOut }>Logout</a></li>\r\n\t    <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{ props.profile.initials }</NavLink></li>\r\n\t  </ul>\r\n\t)\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tsignOut: () => dispatch(signOut())\r\n\t}\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)\r\n\r\n\r\n\r\n\r\n","export const signIn = credentials => {\r\n\treturn (dispatch, getState, { getFirebase}) => {\r\n\t\tconst firebase = getFirebase();\r\n\r\n\t\tfirebase.auth().signInWithEmailAndPassword(\r\n\t\t\tcredentials.email,\r\n\t\t\tcredentials.password\r\n\t\t).then(() => {\r\n\t\t\tdispatch({ type: 'LOGIN_SUCCESS' })\r\n\t\t}).catch(err => {\r\n\t\t\tdispatch({ type: 'LOGIN_ERROR', err })\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const signOut = () => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst firebase = getFirebase();\r\n\r\n\t\tfirebase.auth().signOut().then(() => {\r\n\t\t\tdispatch({ type: 'SIGNOUT_SUCCESS' });\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const signUp = newUser => {\r\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\t\tconst firebase = getFirebase();\r\n\t\tconst firestore = getFirestore();\r\n\r\n\t\tfirebase.auth().createUserWithEmailAndPassword(\r\n\t\t\tnewUser.email,\r\n\t\t\tnewUser.password\r\n\t\t).then(resp => {\r\n\t\t\treturn firestore.collection('users').doc(resp.user.uid).set({\r\n\t\t\t\tfirstName: newUser.firstName,\r\n\t\t\t\tlastName: newUser.lastName,\r\n\t\t\t\tinitials: newUser.firstName[0] + newUser.lastName[0]\r\n\t\t\t})\r\n\t\t}).then(() => {\r\n\t\t\tdispatch({ type: 'SIGNUP_SUCCESS' })\r\n\t\t}).catch(err => {\r\n\t\t\tdispatch({ type: 'SIGNUP_ERROR', err})\r\n\t\t})\r\n\t}\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default () =>(\r\n  <ul className=\"right\">\r\n    <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n    <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n  </ul>\r\n)\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = props => {\r\n\tconst { auth, profile } = props;\r\n\t// console.log(auth);\r\n\tconst links = auth.uid ? <SignedInLinks profile={ profile } /> : <SignedOutLinks />;\r\n\treturn (\r\n\t  <nav className=\"nav-wrapper grey darken-3\">\r\n\t    <div className=\"container\">\r\n\t      <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n\t      { links }\r\n\t    </div>\r\n\t  </nav>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\tconsole.log(state)\r\n\treturn {\r\n\t\tauth: state.firebase.auth,\r\n\t\tprofile: state.firebase.profile\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ notifications }) =>(\r\n  <div className=\"section\">\r\n  \t<div className=\"card z-depth-0\">\r\n  \t\t<div className=\"card-content\">\r\n  \t\t\t<span className=\"card-title\">Notifications</span>\r\n  \t\t\t<ul className=\"notifications\">\r\n  \t\t\t\t{ notifications && notifications.map(notification => (\r\n  \t\t\t\t\t<li key={ notification.id }>\r\n  \t\t\t\t\t\t<span className=\"pink-text\">{ notification.user }</span>\r\n  \t\t\t\t\t\t<span className=\"pink-text\">{ notification.content }</span>\r\n  \t\t\t\t\t\t<div className=\"grey-text note-date\">\r\n  \t\t\t\t\t\t\t{ notification.time.toDate().toString() }\r\n  \t\t\t\t\t\t</div>\r\n  \t\t\t\t\t</li>\r\n  \t\t\t\t)) }\r\n  \t\t\t</ul>\r\n  \t\t</div>\r\n  \t</div>\r\n  </div>\r\n)","import React from 'react'\r\n\r\nexport default ({ project }) =>(\r\n  <div className=\"card z-depth-0 project-summary\">\r\n    <div className=\"card-content grey-text text-darken-3\">\r\n      <span className=\"card-title\">{ project.title }</span>\r\n      <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\r\n      <p className=\"grey-text\">{ project.createdAt.toDate().toString() }</p>\r\n    </div>\r\n  </div>\r\n)","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default ({ projects }) =>(\r\n  <div className=\"project-list section\">\r\n    {projects && projects.map(project => {\r\n    \treturn(\r\n\t    \t<Link to={ '/project/' + project.id } key={ project.id }>\r\n\t\t\t\t<ProjectSummary project={ project }/>\r\n\t    \t</Link>\r\n    \t)\r\n    })}\r\n  </div>\r\n)","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectLists from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux' \r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <ProjectLists projects={ projects }/>\r\n            </div>\r\n            <div className=\"col s12 m5 offset-ml\">\r\n              <Notifications notifications={ notifications }/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst ProjectDetails = props =>{\r\n  // console.log(props);\r\n  const { project, auth } = props;\r\n  if(!auth.uid) return <Redirect to=\"/signin\" />\r\n  if(project){\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{ project.title }</span>\r\n            <p>{ project.content }</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by { project.authorFirstName} { project.authorLastName }</div>\r\n            <div>{ project.createdAt.toDate().toString() }</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }else{\r\n    return(\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(ProjectDetails)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{ authError }</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{ authError }</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create new Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","export const createProject = project => {\r\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\t\t// make asyc call to database\r\n\t\tconst firestore = getFirestore();\r\n\t\tconst profile = getState().firebase.profile;\r\n\t\tconst authorId = getState().firebase.auth.uid;\r\n\t\tfirestore.collection('projects').add({\r\n\t\t\t...project,\r\n\t\t\tauthorFirstName: profile.firstName,\r\n\t\t\tauthorLastName: profile.lastName,\r\n\t\t\tauthorId: authorId,\r\n\t\t\tcreatedAt: new Date()\r\n\t\t}).then(() => {\r\n\t\t\tdispatch({ type: 'CREATE_PROJECT', project });\r\n\t\t}).catch(err => {\r\n\t\t\tdispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n\t\t})\r\n\t}\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ ProjectDetails } />\n            <Route path=\"/signin\" component={ SignIn } />\n            <Route path=\"/signup\" component={ SignUp } />\n            <Route path=\"/create\" component={ CreateProject } />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n\tauthError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n  \tcase 'LOGIN_ERROR':\r\n  \t\tconsole.log('login error');\r\n  \t\treturn {\r\n  \t\t\t...state,\r\n  \t\t\tauthError: 'Login failed'\r\n  \t\t}\r\n  \tcase 'LOGIN_SUCCESS':\r\n  \t\tconsole.log('login success');\r\n  \t\treturn{\r\n  \t\t\t...state,\r\n  \t\t\tauthError: null\r\n  \t\t}\r\n  \tcase 'SIGNOUT_SUCCESS':\r\n  \t\tconsole.log('signout success');\r\n  \t\treturn state\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n  \tdefault: \r\n  \t\treturn state\r\n  }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n  // projects: [\r\n  //   {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n  //   {id: '2', title: 'help me find peach 2', content: 'blah blah blah'},\r\n  //   {id: '3', title: 'help me find peach 3', content: 'blah blah blah'}\r\n  // ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\tswitch (action.type){\r\n\t\tcase 'CREATE_PROJECT': \r\n\t\t\tconsole.log('created project', action.project);\r\n\t\t\treturn state;\r\n\t\tcase 'CREATE_PROJECT_ERROR' :\r\n\t\t\tconsole.log('create project error', action.err);\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth : authReducer,\r\n  project : projectReducer,\r\n  firestore : firestoreReducer,\r\n  firebase : firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyA8cTYhpRIMQEPNC9TNpg_LGih5-t_eQbs\",\r\n  authDomain: \"kennytestfirestore.firebaseapp.com\",\r\n  databaseURL: \"https://kennytestfirestore.firebaseio.com\",\r\n  projectId: \"kennytestfirestore\",\r\n  storageBucket: \"kennytestfirestore.appspot.com\",\r\n  messagingSenderId: \"1082656483682\",\r\n  appId: \"1:1082656483682:web:879c4d746716c3bab0e43b\",\r\n  measurementId: \"G-J26WW1YQBM\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n\tcompose( \n\t\tapplyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n\t\treduxFirestore(fbConfig),\n\t\treactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n\t)\n);\n\nstore.firebaseAuthIsReady.then(() => {\n\n  ReactDOM.render(\n    <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}